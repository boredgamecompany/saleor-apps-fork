server {
    listen 8081;
    server_name localhost;

    # Set the document root
    root /workspace;

    access_log /dev/stdout;
    error_log /dev/stderr;

    # Serve Next.js static files with strong caching
    location /_next/static/ {
        alias /workspace/.next/static/;
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header Vary "Accept-Encoding";

        # Security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";

        # Enable gzip compression
        gzip on;
        gzip_vary on;
        gzip_types
            text/css
            text/javascript
            text/xml
            text/plain
            application/javascript
            application/xml+rss
            application/json
            image/svg+xml;

        # Explicitly try to serve the file, return 404 if not found
        try_files $uri =404;
    }

    # Serve public files with moderate caching
    location /public/ {
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        add_header Vary "Accept-Encoding";

        # Security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";

        # Enable gzip compression
        gzip on;
        gzip_vary on;
        gzip_types
            text/css
            text/javascript
            text/xml
            text/plain
            text/html
            application/javascript
            application/xml+rss
            application/json
            image/svg+xml;

        # Explicitly try to serve the file, return 404 if not found
        try_files $uri =404;
    }

    # Special handling for specific file types in public directory
    location ~* ^/public/.*\.(jpg|jpeg|png|gif|ico|svg|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header Vary "Accept-Encoding";
        add_header X-Content-Type-Options nosniff;
        try_files $uri =404;
    }

    location ~* ^/public/.*\.(css|js|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header Vary "Accept-Encoding";
        add_header X-Content-Type-Options nosniff;

        gzip on;
        gzip_vary on;
        try_files $uri =404;
    }

    # Health check endpoint with project info
    location /health {
        access_log off;
        return 200 '{"status":"ok","project":"{{PROJECT}}","version":"{{VERSION}}","env":"{{NODE_ENV}}"}';
        add_header Content-Type application/json;
    }

    # # Proxy all other requests to Node.js
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
